#-------------------------------------
# Ender 5 Plus w/ SKR 1.4 Turbo, 2209's
# v. 0.3
#-------------------------------------

[include mainsail.cfg]

#-------------------------------------
# Firmware Retraction
#-------------------------------------
# [firmware_retraction]
# retract_length: 0.8
# retract_speed: 60
# unretract_extra_length: 0
# unretract_speed: 60

#-------------------------------------
# Pressure Advance
#-------------------------------------
# [extruder]
# pressure_advance: 0.0 # Overture PLA

#-------------------------------------
# Input Shaper
#-------------------------------------
# [input_shaper]
# shaper_freq_x: 82.8
# shaper_type_x: mzv
# shaper_freq_y: 70.2
# shaper_type_y: mzv

#-------------------------------------
# Extruder
#-------------------------------------
[extruder]
step_pin: P2.13
dir_pin: !P0.11
enable_pin: !P2.12
microsteps: 16
rotation_distance: 34.528
nozzle_diameter: 0.400
filament_diameter: 1.750
heater_pin: P2.7
sensor_type: EPCOS 100K B57560G104F
sensor_pin: P0.24
min_temp: 0
max_temp: 260
max_extrude_only_distance: 100

#-------------------------------------
# Printer General
#-------------------------------------
[safe_z_home]
home_xy_position: 180, 180
speed: 100
z_hop: 10
z_hop_speed: 100

[bltouch]
sensor_pin: P0.10 #Probe
control_pin: P2.0 #SERVOS
stow_on_each_sample: False
probe_with_touch_mode: True
pin_up_touch_mode_reports_triggered: False
set_output_mode: 5V
speed: 100
pin_move_time: 0.675
lift_speed: 200
samples: 4
sample_retract_dist: 10
#Mount Offset
x_offset: -30.4
y_offset: -0

[bed_mesh]
speed: 100
horizontal_move_z: 10
mesh_min: 50, 50
mesh_max: 300,300
probe_count: 5,5
mesh_pps: 2,2
algorithm: bicubic
bicubic_tension: 0.2
move_check_distance: 5
split_delta_z: .025
fade_start: 1
fade_end: 10
fade_target: 0

[heater_bed]
heater_pin: P2.5
sensor_type: EPCOS 100K B57560G104F
sensor_pin: P0.25
min_temp: 0
max_temp: 130

[fan]
pin: P2.3

[mcu]
serial: /dev/serial/by-id/usb-Klipper_lpc1769_1E900008A8943BAFE7AD685CC02000F5-if00

[filament_switch_sensor filament_sensor]
switch_pin:P1.26

[printer]
kinematics: cartesian
max_velocity: 150
max_accel: 3000
max_accel_to_decel: 3000
max_z_velocity: 10
max_z_accel: 100
square_corner_velocity: 20

[temperature_sensor raspberry_pi]
sensor_type: temperature_host
max_temp: 100

#[temperature_sensor mcu_temp]
#sensor_type: temperature_mcu
#max_temp: 100

#-------------------------------------
# Macros
#-------------------------------------

[gcode_macro G29]
gcode:
  BED_MESH_CALIBRATE

[gcode_macro PAUSE]
description: Pause the actual running print
rename_existing: PAUSE_BASE
variable_extrude: 1.0
gcode:
  {% set E = printer["gcode_macro PAUSE"].extrude|float %}
  {% set x_park = printer.toolhead.axis_maximum.x|float - 5.0 %}
  {% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}
  {% set max_z = printer.toolhead.axis_maximum.z|float %}
  {% set act_z = printer.toolhead.position.z|float %}
  {% if act_z < (max_z - 2.0) %}
      {% set z_safe = 2.0 %}
  {% else %}
      {% set z_safe = max_z - act_z %}
  {% endif %}
  PAUSE_BASE
  G91
  {% if printer.extruder.can_extrude|lower == 'true' %}
    G1 E-{E} F2100
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}
  {% if "xyz" in printer.toolhead.homed_axes %}
    G1 Z{z_safe} F900
    G90
    G1 X{x_park} Y{y_park} F6000
  {% else %}
    {action_respond_info("Printer not homed")}
  {% endif %} 

[gcode_macro RESUME]
description: Resume the actual running print
rename_existing: RESUME_BASE
gcode:
  {% set E = printer["gcode_macro PAUSE"].extrude|float %}
  {% if 'VELOCITY' in params|upper %}
    {% set get_params = ('VELOCITY=' + params.VELOCITY)  %}
  {%else %}
    {% set get_params = "" %}
  {% endif %}
  {% if printer.extruder.can_extrude|lower == 'true' %}
    G91
    G1 E{E} F2100
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}  
  RESUME_BASE {get_params}

[gcode_macro CANCEL_PRINT]
description: Cancel the actual running print
rename_existing: CANCEL_PRINT_BASE
gcode:
  TURN_OFF_HEATERS
  CANCEL_PRINT_BASE

[gcode_macro load_mesh]
gcode:
    BED_MESH_PROFILE load=default

[gcode_macro _load_unload]
variable_is_printing: 1
gcode:
  SET_GCODE_VARIABLE MACRO=_load_unload VARIABLE=is_printing VALUE="{1}"
  {% set saved_extruder = printer.toolhead.extruder %}
  {% set EXTRUDER = params.EXTRUDER|default(saved_extruder)|lower %}
  {% set MINIMUM = params.MINIMUM|default(
           printer.configfile.settings[EXTRUDER].min_extrude_temp + 5.0) %}
  {% if MINIMUM < printer.configfile.settings[EXTRUDER].min_extrude_temp %}
    { action_raise_error("Extrude below minimum temp.") }
  {% elif printer.idle_timeout.state == "Printing" and is_printing and
     not printer.pause_resume.is_paused %}
    { action_raise_error("Command not valid during printing.") }
  {% endif %}
  {% set km = printer["gcode_macro _km_globals"] %}
  {% set SPEED = params.SPEED|default(km.load_speed) %}
  {% set priming_length = km.load_priming_length %}
  {% set LENGTH = params.LENGTH|default(km.load_length)|float - priming_length%}
  {% if LENGTH < 0 %}
    {% set priming_length = (priming_length + LENGTH, 0)|max %}
    {% set LENGTH = 0 %}
  {% endif %}
  SAVE_GCODE_STATE NAME=_LOAD_UNLOAD
  {% if EXTRUDER != saved_extruder%}
    ACTIVATE_EXTRUDER EXTRUDER={EXTRUDER}
  {% endif %}
  {% if printer[EXTRUDER].target < MINIMUM %}
    M109 S{MINIMUM}
  {% endif %}
  M83
  {% if params.LOAD|int %}
    G1 E{LENGTH} F{SPEED}
    G1 E{priming_length} F{(km.load_priming_speed, SPEED)|min}
    G1 E{'%.4f' % -printer["gcode_macro resume"].saved_e} F{km.load_speed}
  {% else %}
    G1 E3.0 F{SPEED}
    G4 P500
    G1 E{'%.4f' % -priming_length} F{(km.load_priming_speed, SPEED)|min}
    G1 E{'%.4f' % -LENGTH} F{SPEED}
  {% endif %}
  RESTORE_GCODE_STATE NAME=_LOAD_UNLOAD

[gcode_macro load_filament]
description: Loads filament to the extruder.
  Usage: LOAD_FILAMENT [LENGTH=<distance>] [SPEED=<speed>]
                       [EXTRUDER=<extruder>] [MINIMUM=<temperature>]
gcode:
  _LOAD_UNLOAD LOAD=1{% for k in params
    %}{' '~k~'="'~params[k]~'"'}{% endfor %}
  {% set dummy = None if True else "
  {% set dummy = params.LENGTH|default(variable_load_length)|float %}
  {% set dummy = params.SPEED|default(variable_load_speed)|float %}
  {% set dummy = params.EXTRUDER|default(current extruder) %}
  {% set dummy = params.MINIMUM|default(min_extrude_temp)|int %}
  " %} 

[gcode_macro unload_filament]
description: Unloads filament from the extruder.
  Usage: UNLOAD_FILAMENT [LENGTH=<distance>] [SPEED=<speed>]
                         [EXTRUDER=<extruder>] [MINIMUM=<temperature>]
gcode:
  _LOAD_UNLOAD LOAD=0{% for k in params
    %}{' '~k~'="'~params[k]~'"'}{% endfor %}
  {% set dummy = None if True else "
  {% set dummy = params.LENGTH|default(variable_load_length)|float %}
  {% set dummy = params.SPEED|default(variable_load_speed)|float %}
  {% set dummy = params.EXTRUDER|default(default extruder) %}
  {% set dummy = params.MINIMUM|default(min_extrude_temp)|int %}
  " %}

[gcode_macro _pause_inner_m700]
gcode:
  {% set extruder = printer["extruder" ~ params.T|int]
     if params.T|default(0)|int != 0 else printer.toolhead.extruder %}
  {% if extruder != printer.toolhead.extruder%}
    ACTIVATE_EXTRUDER EXTRUDER={extruder}
  {% endif %}

  {% set z_param = (' Z="%f"' % params.Z) if 'Z' in params else "" %}

  {% if printer.idle_timeout.state|string == "Printing" %}
    PAUSE P=2{z_param}
  {% elif not printer.pause_resume.is_paused%}
    SET_GCODE_VARIABLE MACRO=_load_unload VARIABLE=is_printing VALUE="{0}"
    PARK P=2{z_param}
  {% endif %}

[gcode_macro m701]
description: Pauses/parks the toolhead then loads filament to the extruder.
  Usage: M701 [L<distance>] [Z<pos>] [T<extruder>]
gcode:
  {% if 'U' in params %}
    {% if not 'L' in params %}
      RESPOND TYPE=error MSG="Argument \"U\" substituted for missing \"L\"."
      {% set dummy = params.__setitem__("L", params.U) %}
    {% else %}
      RESPOND TYPE=error MSG="Invalid argument \"U\" ignored."
    {% endif %}
  {% endif %}

  _PAUSE_INNER_M700 {% for k in params %}{' '~k~'="'~params[k]~'"'}{% endfor %}
  LOAD_FILAMENT LENGTH={
    params.L|default(printer["gcode_macro _km_globals"].load_length)|float}

[gcode_macro m702]
description: Pauses/parks the toolhead then unloads filament from the extruder.
  Usage: M702 [U<distance>] [Z<pos>] [T<extruder>]
gcode:
  {% if 'L' in params %}
    {% if not 'U' in params %}
      RESPOND TYPE=error MSG="Argument \"L\" substituted for missing \"U\"."
      {% set dummy = params.__setitem__("U", params.L) %}
    {% else %}
      RESPOND TYPE=error MSG="Invalid argument \"L\" ignored."
    {% endif %}
  {% endif %}

  _PAUSE_INNER_M700 {% for k in params %}{' '~k~'="'~params[k]~'"'}{% endfor %}
  UNLOAD_FILAMENT LENGTH={
    params.U|default(printer["gcode_macro _km_globals"].load_length)|float}

#-------------------------------------
# Bed Leveling
#-------------------------------------
[z_tilt]
z_positions:-20,175
            370,175
points: 55,175
        330,175
speed: 80
horizontal_move_z: 5
retries: 4
retry_tolerance: 0.005

[screws_tilt_adjust]
screw1: 48,54
screw1_name: front left screw
screw2: 332,54
screw2_name: front right screw
screw3: 332,315
screw3_name: rear right screw
screw4: 48,315
screw4_name: rear left screw
horizontal_move_z: 10.
speed: 50.
screw_thread: CCW-M4

[bed_screws]
screw1: 26,39
screw2: 310,39
screw3: 310,300
screw4: 26,300

#-------------------------------------
# Board 
#-------------------------------------
[board_pins]
aliases:
    EXP1_1=P1.30, EXP1_3=P1.18, EXP1_5=P1.20, EXP1_7=P1.22, EXP1_9=<GND>,
    EXP1_2=P0.28, EXP1_4=P1.19, EXP1_6=P1.21, EXP1_8=P1.23, EXP1_10=<5V>,
    EXP2_1=P0.17, EXP2_3=P3.26, EXP2_5=P3.25, EXP2_7=P1.31, EXP2_9=<GND>,
    EXP2_2=P0.15, EXP2_4=P0.16, EXP2_6=P0.18, EXP2_8=<RST>, EXP2_10=<NC>

[display]
lcd_type: emulated_st7920
en_pin: EXP1_4
spi_software_sclk_pin: EXP1_5
spi_software_mosi_pin: EXP1_3
spi_software_miso_pin: EXP1_6
encoder_pins: ^EXP2_5, ^EXP2_3
click_pin: ^!EXP1_2

[output_pin beeper]
pin: EXP1_1

#-------------------------------------
# Others
#-------------------------------------
[force_move]
enable_force_move: True
[virtual_sdcard]
path: ~/gcode_files
[exclude_object]
[display_status]
[pause_resume]

#[adxl345]
# cs_pin: rpi:None
#[resonance_tester]
# accel_chip: adxl345
#probe_points:
#   177.5, 177.5, 20
#[respond]
# default_type: echo

[idle_timeout]
timeout: 1800
gcode:
  TURN_OFF_HEATERS

#-------------------------------------
# Stepper Drivers
#-------------------------------------
[tmc2209 stepper_x]
uart_pin: P1.10
interpolate: true
sense_resistor: 0.110
run_current: 0.45
stealthchop_threshold: 999999

[tmc2209 stepper_y]
uart_pin: P1.9
interpolate: true
sense_resistor: 0.110
run_current: 0.57
stealthchop_threshold: 999999

[tmc2209 stepper_z]
uart_pin: P1.8
interpolate: true
sense_resistor: 0.110
run_current: 0.48
stealthchop_threshold: 999999

[tmc2209 stepper_z1]
uart_pin: P1.1
interpolate: true
sense_resistor: 0.110
run_current: 0.48
stealthchop_threshold: 999999

[tmc2209 extruder]
uart_pin: P1.4
run_current: 0.800
stealthchop_threshold: 999999

#-------------------------------------
# Steppers
#-------------------------------------
[stepper_x]
step_pin: P2.2
dir_pin: !P2.6
enable_pin: !P2.1
microsteps: 16
rotation_distance: 39.88
endstop_pin: P1.29
position_endstop: 360
position_min: 0
position_max: 360
homing_speed: 50
homing_retract_dist: 5

[stepper_y]
step_pin: P0.19
dir_pin: !P0.20
enable_pin: !P2.8
microsteps: 16
rotation_distance: 39.83
endstop_pin: P1.28
position_endstop: 360
position_min: 0
position_max: 360
homing_speed: 50
homing_retract_dist: 5

[stepper_z]
step_pin: P0.22
dir_pin: !P2.11
enable_pin: !P0.21
microsteps: 16
rotation_distance: 4
endstop_pin: probe:z_virtual_endstop
position_max: 400
position_min: -5
homing_speed: 10.0

[stepper_z1]
step_pin: P1.15
dir_pin: !P1.14
enable_pin: !P1.16
microsteps: 16
rotation_distance: 4

#-------------------------------------
# Printer Save Config
#-------------------------------------

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 25.111
#*# pid_ki = 1.249
#*# pid_kd = 126.180
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 77.209
#*# pid_ki = 1.046
#*# pid_kd = 1424.507
#*#
#*# [bltouch]
#*# z_offset = 3.299
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	  -0.021875, 0.016875, 0.029375, 0.010625, -0.076250
#*# 	  -0.005000, 0.013125, 0.026875, 0.008750, -0.064375
#*# 	  -0.008750, 0.017500, 0.028750, 0.011250, -0.051875
#*# 	  -0.013125, 0.006250, 0.020000, -0.004375, -0.069375
#*# 	  -0.002500, 0.001875, 0.015625, -0.010625, -0.081250
#*# tension = 0.2
#*# min_x = 50.0
#*# algo = bicubic
#*# y_count = 5
#*# mesh_y_pps = 2
#*# min_y = 50.0
#*# x_count = 5
#*# max_y = 300.0
#*# mesh_x_pps = 2
#*# max_x = 300.0
